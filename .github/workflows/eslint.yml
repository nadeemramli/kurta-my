# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# ESLint is a tool for identifying and reporting on patterns
# found in ECMAScript/JavaScript code.
# More details at https://github.com/eslint/eslint
# and https://eslint.org

name: ESLint

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "yarn.lock"
      - ".yarn/**"
      - "**/node_modules/**"
      - "supabase/config.toml"
      - "supabase/.branches/**"
      - "supabase/.temp/**"
  pull_request:
    branches: ["main"]
    paths-ignore:
      - "**/*.md"
      - "**/*.txt"
      - "yarn.lock"
      - ".yarn/**"
      - "**/node_modules/**"
      - "supabase/config.toml"
      - "supabase/.branches/**"
      - "supabase/.temp/**"
  schedule:
    - cron: "24 17 * * 6"

jobs:
  eslint:
    name: Run eslint scanning
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: "true"
        run: |
          npx eslint . \
            --config .eslintrc.js \
            --ext .js,.jsx,.ts,.tsx \
            --ignore-pattern "node_modules/" \
            --ignore-pattern "packages/auth/node_modules/" \
            --ignore-pattern ".yarn/" \
            --ignore-pattern "yarn.lock" \
            --ignore-pattern "dist/" \
            --ignore-pattern ".next/" \
            --ignore-pattern "supabase/config.toml" \
            --format @microsoft/eslint-formatter-sarif \
            --output-file eslint-results.sarif
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
